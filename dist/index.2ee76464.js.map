{"mappings":"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","sources":["node_modules/date-fns/esm/_lib/requiredArgs/index.js","node_modules/date-fns/esm/toDate/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","node_modules/date-fns/esm/locale/en-US/index.js","node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","node_modules/date-fns/esm/_lib/toInteger/index.js","node_modules/date-fns/esm/addMilliseconds/index.js","node_modules/date-fns/esm/subMilliseconds/index.js","node_modules/date-fns/esm/_lib/assign/index.js","node_modules/date-fns/esm/_lib/format/longFormatters/index.js","node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","node_modules/date-fns/esm/_lib/protectedTokens/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/setUTCDay/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCWeek/index.js","node_modules/date-fns/esm/parse/_lib/parsers/index.js","node_modules/date-fns/esm/_lib/setUTCWeek/index.js","node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/setUTCISODay/index.js","node_modules/date-fns/esm/parse/index.js","logic.js","node_modules/date-fns/esm/getTime/index.js"],"sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  }; // If timezone isn't specified, it will be set to the system timezone\n\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import * as datefns from \"date-fns\";\n\n// const btn = document.getElementById(\"btn\");\n// btn.addEventListener(\"click\", showValue, false);\n\nconst txtarea = getTextareaElement(\"txtArea\");\ntxtarea.focus();\ntxtarea.select();\n\ntxtarea.oninput = handleInput;\n\nlet timeRangesArray = [];\nlet rangeObjectArray = [];\nlet formattedRangesArray = [];\nlet formattedMillisecArray = [];\nlet durationsArray = [];\n\nconst txtValue = textareaToString(\"txtArea\");\nshowValue(txtValue);\n\nfunction handleInput(e) {\n\tshowValue(e.target.value);\n}\n\nfunction showValue(input) {\n\ttimeRangesArray = stringToTimeRanges(input);\n\tif (timeRangesArray === null) {\n\t\tconsole.log(\"YOOOOOO\");\n\t\tdocument.getElementById(\"result\").innerText =\n\t\t\t\"Please paste time in the left box.\";\n\t} else {\n\t\trangeObjectArray = timeRangesArray.map((range) => rangeToTime(range));\n\t\tformattedRangesArray = rangeObjectArray.map((obj) => {\n\t\t\tconst object = {};\n\t\t\tobject.start = formatTimeString(obj[\"start\"]);\n\t\t\tobject.end = formatTimeString(obj[\"end\"]);\n\t\t\treturn object;\n\t\t});\n\t\tformattedMillisecArray = formattedRangesArray.map((obj) => {\n\t\t\tconst object = {};\n\t\t\tobject.start = formattedTimeStringToTime(obj[\"start\"]);\n\t\t\tobject.end = formattedTimeStringToTime(obj[\"end\"]);\n\t\t\treturn object;\n\t\t});\n\t\tdurationsArray = formattedMillisecArray.map((obj) => stringToDuration(obj));\n\t\tconst resultMillisec = durationsArray.reduce(function (\n\t\t\tpreviousValue,\n\t\t\tcurrentValue\n\t\t) {\n\t\t\treturn previousValue + currentValue;\n\t\t},\n\t\t0);\n\t\tconsole.log(\"1...\" + timeRangesArray);\n\t\tconsole.log(rangeObjectArray);\n\t\tconsole.log(formattedRangesArray);\n\t\tconsole.log(formattedMillisecArray);\n\t\tconsole.log(\"5...\" + durationsArray);\n\t\tlet hoursResult = formatMilliseconds(resultMillisec);\n\t\tconsole.log(hoursResult);\n\t\tif (hoursResult.includes(\"NaN\")) {\n\t\t\thoursResult =\n\t\t\t\t\"Cannot parse time. \\nPlease check for invalid time range(s).\";\n\t\t}\n\t\tlet tx = \"\";\n\t\tformattedRangesArray.forEach((range) => {\n\t\t\ttx += \"\\n\\n\" + range[\"start\"] + \" - \" + range[\"end\"];\n\t\t\tconsole.log(tx);\n\t\t});\n\n\t\tconst finalResult = hoursResult + tx;\n\t\tdocument.getElementById(\"result\").innerText = finalResult;\n\t}\n}\n\nfunction getTextareaElement(textareaId) {\n\t// given a text area, return its content as a string\n\treturn document.getElementById(textareaId);\n}\n\nfunction textareaToString(textareaId) {\n\t// given a text area, return its content as a string\n\treturn document.getElementById(textareaId).value;\n}\n\nfunction stringToTimeRanges(rawInput) {\n\t// find all the time ranges in the string [aApP][mM]\n\tconst regex =\n\t\t/\\d{1,2}:+\\d{1,2}\\s?[aApP][mM]\\s-\\s\\d{1,2}:+\\d{1,2}\\s?[aApP][mM]/gm;\n\tconst found = rawInput.match(regex);\n\tconsole.log(found);\n\treturn found;\n}\n\n// ['7:30 am - 8:40Pm', '6:20AM - 10:38 am']\nfunction rangeToTime(timeRangeString) {\n\t// get each time from a time range string\n\tconst words = timeRangeString.split(\" - \");\n\tconst timeRangeObject = new Object();\n\ttimeRangeObject.start = words[0];\n\ttimeRangeObject.end = words[1];\n\n\tconsole.log(timeRangeObject);\n\treturn timeRangeObject;\n}\n\n// {start: '7:30 am', end: '8:40Pm'}\nfunction formatTimeString(timeString) {\n\t// convert a time like \"12:30PM\"\n\t// to a consistent format like \"12:30 pm\"\n\ttimeString = timeString.toUpperCase();\n\ttimeString = timeString.replace(/\\s/g, \"\");\n\ttimeString = timeString.split(\"\").reverse().join(\"\");\n\ttimeString = timeString.slice(0, 2) + \" \" + timeString.slice(2);\n\ttimeString = timeString.split(\"\").reverse().join(\"\");\n\treturn timeString;\n}\n\nfunction formattedTimeStringToTime(formattedTimeString) {\n\t// convert a formatted time like \"12:30 pm\" to a timestamp\n\treturn datefns.getTime(datefns.parse(formattedTimeString, \"p\", new Date()));\n}\n\n// formattedTimeStringToTime(formatTimeString(words[0]));\nfunction stringToDuration(obj) {\n\t// given a string from the textarea, return a duration in milliseconds\n\t// use the other functions to calculate this\n\treturn obj.end - obj.start;\n}\n\nfunction formatMilliseconds(milliseconds) {\n\t// given a duration in milliseconds, return a string like \"1 hour, 30 minutes\"\n\t// (date-fns is a good library for this)\n\tlet millisecs = Math.floor((milliseconds % 1000) / 100),\n\t\tseconds = Math.floor((milliseconds / 1000) % 60),\n\t\tminutes = Math.floor((milliseconds / (1000 * 60)) % 60),\n\t\thours = Math.floor((milliseconds / (1000 * 60 * 60)) % 24);\n\n\thours = hours < 10 ? \"0\" + hours : hours;\n\tminutes = minutes < 10 ? \"0\" + minutes : minutes;\n\tseconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n\tlet strHour = hours < 10 ? \"hour\" : \"hours\";\n\tlet strMin = minutes < 10 ? \"minute\" : \"minutes\";\n\n\treturn hours + \" \" + strHour + \" \" + minutes + \" \" + strMin;\n}\nv;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * const result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\n\nexport default function getTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}"],"names":["required","args","length","TypeError","argument","$3ceeeaff471aba0e$export$2e2bcd8739ae039","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","$8c816f615572117c$var$formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","$8c816f615572117c$export$2e2bcd8739ae039","token","count","options","result","tokenValue","replace","addSuffix","comparison","undefined","width","String","defaultWidth","format","formats","$2703349fcbc90ca9$var$formatLong","date","$aa2b3f58ab59fbd5$export$2e2bcd8739ae039","full","long","medium","short","time","dateTime","$af3553cad0621bcb$var$formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","dirtyIndex","dirtyOptions","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","value","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","$f22459042be6d9e0$var$findIndex","pattern","test","$f22459042be6d9e0$var$findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","$3d21f7ccc066a4b6$export$2e2bcd8739ae039","code","formatDistance","formatLong","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","$d31bc36732a3ca57$export$2e2bcd8739ae039","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","$f22459042be6d9e0$export$2e2bcd8739ae039","any","index","weekStartsOn","firstWeekContainsDate","isNaN","Math","ceil","floor","dirtyDate","dirtyAmount","timestamp","$ee10b839474e06dc$export$2e2bcd8739ae039","amount","$71d89e0e548ed29c$export$2e2bcd8739ae039","$457e7df1071a3b5b$export$2e2bcd8739ae039","target","dirtyObject","property","$74ff5c22be76ac89$var$dateLongFormatter","$74ff5c22be76ac89$var$timeLongFormatter","$74ff5c22be76ac89$export$2e2bcd8739ae039","p","P","dateTimeFormat","datePattern","timePattern","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","$ded06d2aa113baf7$var$protectedDayOfYearTokens","$ded06d2aa113baf7$var$protectedWeekYearTokens","$ded06d2aa113baf7$export$c6cc36aa33304772","indexOf","$ded06d2aa113baf7$export$c6b49d6dceb604a1","$ded06d2aa113baf7$export$8073c1ae88f0e727","input","RangeError","concat","locale","localeWeekStartsOn","defaultWeekStartsOn","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","year","getUTCFullYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","startOfNextYear","$409082d079f00aa1$export$2e2bcd8739ae039","firstWeekOfThisYear","startOfThisYear","dirtyDay","currentDay","remainder","dayIndex","fourthOfJanuaryOfNextYear","$833c5383dbaf0327$export$2e2bcd8739ae039","fourthOfJanuaryOfThisYear","$81da03157f7a8cce$export$2e2bcd8739ae039","fourthOfJanuary","$b24b8e2584c2e141$export$2e2bcd8739ae039","round","$c390fe9f60678378$export$2e2bcd8739ae039","firstWeek","$e83ddf08d2694915$export$2e2bcd8739ae039","$b8aae1da1ab01f05$var$numericPatterns","$b8aae1da1ab01f05$var$timezonePatterns","$b8aae1da1ab01f05$var$parseNumericPattern","$b8aae1da1ab01f05$var$parseTimezonePattern","$b8aae1da1ab01f05$var$parseAnyDigitsSigned","$b8aae1da1ab01f05$var$parseNDigits","n","RegExp","$b8aae1da1ab01f05$var$parseNDigitsSigned","$b8aae1da1ab01f05$var$dayPeriodEnumToHours","enumValue","$b8aae1da1ab01f05$var$normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","$b8aae1da1ab01f05$var$DAYS_IN_MONTH","$b8aae1da1ab01f05$var$DAYS_IN_MONTH_LEAP_YEAR","$b8aae1da1ab01f05$var$isLeapYearIndex","$b8aae1da1ab01f05$export$2e2bcd8739ae039","G","priority","parse","set","flags","incompatibleTokens","y","isTwoDigitYear","unit","validate","normalizedTwoDigitYear","Y","R","_match","_flags","firstWeekOfYear","u","Q","setUTCMonth","q","M","L","w","dirtyWeek","week","$2dde9ff7816ced3f$export$2e2bcd8739ae039","$11d0063ea55dc186$export$2e2bcd8739ae039","I","dirtyISOWeek","isoWeek","$b5ae1367539b6a28$export$2e2bcd8739ae039","$c308c0679775fb96$export$2e2bcd8739ae039","d","subPriority","isLeapYear","getUTCMonth","D","E","$bd522bad05121ea7$export$2e2bcd8739ae039","e","wholeWeekDays","c","i","$44fb14716313ee3f$export$2e2bcd8739ae039","a","b","B","h","isPM","getUTCHours","H","K","k","hours","m","setUTCMinutes","s","setUTCSeconds","S","pow","setUTCMilliseconds","X","timestampIsSet","x","t","_token","T","$bfcac07cfd306a77$var$formattingTokensRegExp","$bfcac07cfd306a77$var$longFormattingTokensRegExp","$bfcac07cfd306a77$var$escapedStringRegExp","$bfcac07cfd306a77$var$doubleQuoteRegExp","$bfcac07cfd306a77$var$notWhitespaceRegExp","$bfcac07cfd306a77$var$unescapedLatinCharacterRegExp","$bfcac07cfd306a77$var$dateToSystemTimezone","convertedDate","setFullYear","setHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","$bfcac07cfd306a77$var$cleanEscapedString","$8d881f73fe20c7dd$var$txtarea","textareaId","document","getElementById","focus","select","oninput","$8d881f73fe20c7dd$var$showValue","$8d881f73fe20c7dd$var$timeRangesArray","$8d881f73fe20c7dd$var$rangeObjectArray","$8d881f73fe20c7dd$var$formattedRangesArray","$8d881f73fe20c7dd$var$formattedMillisecArray","$8d881f73fe20c7dd$var$durationsArray","$8d881f73fe20c7dd$var$txtValue","$8d881f73fe20c7dd$var$textareaToString","rawInput","regex","found","log","$8d881f73fe20c7dd$var$stringToTimeRanges","innerText","map","range","timeRangeString","words","split","timeRangeObject","start","end","$8d881f73fe20c7dd$var$rangeToTime","obj","$8d881f73fe20c7dd$var$formatTimeString","$8d881f73fe20c7dd$var$formattedTimeStringToTime","$8d881f73fe20c7dd$var$stringToDuration","resultMillisec","reduce","previousValue","currentValue","hoursResult","milliseconds","seconds","minutes","$8d881f73fe20c7dd$var$formatMilliseconds","includes","tx","forEach","finalResult","timeString","toUpperCase","reverse","join","formattedTimeString","$1a746ed16f652a48$export$2e2bcd8739ae039","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","subFnOptions","setters","tokens","substring","firstCharacter","longFormatter","usedTokens","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","firstCharacter1","parser","incompatibleToken","_i","usedToken","fullToken","push","uniquePrioritySetters","setter","sort","filter","setterArray","$002c32566ec42594$export$2e2bcd8739ae039","$0eb219d0cfee35f0$export$2e2bcd8739ae039","setter1","$deab1293ab0050c1$export$2e2bcd8739ae039","$bfcac07cfd306a77$export$2e2bcd8739ae039"],"version":3,"file":"index.2ee76464.js.map"}